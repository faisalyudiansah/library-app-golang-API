version: "3"
services:
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    network_mode: "host"
    # platform: linux/aarch64
    ports:
      - "8080:8080"
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices: 
      - "/dev/kmsg"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    network_mode: "host"
    ports:
      - "9090:9090"
    volumes: 
      - "./infra/prometheus.yml:/etc/prometheus/prometheus.yml"
    privileged: true
    depends_on:
      - cadvisor

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    network_mode: "host"
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - DS_PROMETHEUS=prometheus
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587  
      # - GF_SMTP_PORT=1025
      - GF_SMTP_USER=email
      - GF_SMTP_PASSWORD=password
    volumes: 
      - "grafana-data:/var/lib/grafana"
      - "./infra/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml"
      - "./infra/dashboard.json:/var/lib/grafana/dashboards/dashboard.json"
      - "./infra/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml"
    privileged: true
    depends_on:
      - prometheus
    
  web:
    container_name: httpserver
    build:
      context: .
    ports:
      - '8081:8081'
    labels: # labels in Compose file instead of Dockerfile
      web.httpserver: httpserver
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: postgres-db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db/db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
  
  
  postgres-exporter:
    container_name: postgresql-exporter
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/library_db?sslmode=disable"
    depends_on:
      - db
  

volumes:
  grafana-data: